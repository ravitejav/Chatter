{"version":3,"sources":["Components/FriendRequests/index.tsx"],"names":["FriendRequests","useState","requests","setRequests","users","setUsers","TOAST_CONSTANT","toastDetails","setToastDetails","changesDetails","setChangedDetails","resetToast","getuserData","userQuery","FirebaseUser","getAllUsers","then","resultsUsers","getRequests","res","exists","val","catch","error","WARNING_CONSTANT","GOOGLE_AUTH_ERROR","useEffect","className","Object","keys","map","ele","i","src","profileUrl","alt","name","email","onClick","e","user","userId","preventDefault","acceptFriendRequest","uidExtractor","getCurrentUser","INFO_CONSTANT","USER_IS_ADDED","callBack","ERROR_CONSTANT","handleAcceptRequest","rejectFriendRequest","SUCCESS_CONSTANT","REMOVED_FROM_REQUEST_LIST","handleRejectRequest","length","time","message","type","showToast"],"mappings":"8KA4GeA,UAnGQ,WAEnB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,mBAASK,KAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CP,oBAAS,GAArD,mBAAOQ,EAAP,KAAuBC,EAAvB,KAGMC,EAAa,kBAAMH,EAAgBF,MAEnCM,EAAc,WAChB,IAAMC,EAAY,IAAIC,IACtBD,EAAUE,cACLC,MAAK,SAAAC,GACFZ,EAASY,GACTJ,EAAUK,cACLF,MAAK,SAAAG,GAAG,OAAIA,EAAIC,SAAWjB,EAAYgB,EAAIE,OAAS,QACpDC,OAAM,SAAAC,GAAK,OAAIC,YAAiBC,WAExCH,OAAM,SAAAC,GAAK,OAAIC,YAAiBC,SAGzCC,qBAAU,WACNd,MACD,IAEHc,qBAAU,WACFjB,IACAG,IACAF,GAAkB,MAEvB,CAACD,IAgCJ,OACI,0BAASkB,UAAU,sBAAnB,UACI,oBAAIA,UAAU,gBAAd,SACKC,OAAOC,KAAK3B,GAAU4B,KAAI,SAACC,EAAUC,GAAX,OACvB9B,EAAS6B,GAEL,6BACI,sBAAKJ,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKM,IAAM7B,EAAM2B,GAAKG,YAAc,qFAAsFC,IAAK,gBAC/H,sBAAKR,UAAU,UAAf,UACI,+BAAOvB,EAAM2B,GAAKK,OAClB,+BAAOhC,EAAM2B,GAAKM,cAG1B,sBAAKV,UAAU,eAAf,UACI,qBAAKW,QAAS,SAACC,GAAD,OA9ClB,SAACA,EAAQC,EAAWC,GAAiB,IAAD,EAC5DF,EAAEG,iBACF,IAAM7B,EAAY,IAAIC,IACtBD,EAAU8B,oBAAoBF,EAAQG,aAAa,UAAA/B,EAAUgC,wBAAV,eAA4BR,QAAS,KACnFrB,MAAK,SAAAG,GACFT,GAAkB,GAClBF,EAAgBsC,YAAcC,MAC9BC,YAAS,EAAGrC,MAEfW,OAAM,SAAAC,GACHf,EAAgByC,YAAexB,MAC/BuB,YAAS,EAAGrC,MAmC6BuC,CAAoBX,EAAGnC,EAAM2B,GAAMA,IAAxD,oBAGA,qBAAKO,QAAS,SAACC,GAAD,OAlClB,SAACA,EAAQC,EAAWC,GAAiB,IAAD,EAC5DF,EAAEG,iBACF,IAAM7B,EAAY,IAAIC,IACtBD,EAAUsC,oBAAoBP,aAAa,UAAA/B,EAAUgC,wBAAV,eAA4BR,QAAS,IAAKI,GAChFzB,MAAK,SAAAG,GACFT,GAAkB,GAClBF,EAAgB4C,YAAiBC,MACjCL,YAAS,EAAGrC,MAEfW,OAAM,SAAAC,GACHf,EAAgByC,YAAexB,MAC/BuB,YAAS,EAAGrC,MAuB6B2C,CAAoBf,EAAGnC,EAAM2B,GAAMA,IAAxD,2BAbHC,GAmBP,UAGoB,IAAjCJ,OAAOC,KAAK3B,GAAUqD,QACnB,qBAAK5B,UAAU,aAAf,gCAEJ,cAAC,IAAD,CAAS6B,KAAM,EAAGC,QAASlD,EAAakD,QAASC,KAAMnD,EAAamD,KAAqBC,UAAWpD,EAAaoD,iB","file":"static/js/16.ab0701fd.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { FirebaseUser } from '../../Firebase/FirebaseUserDetails';\nimport './FriendRequests.css';\nimport { ERROR_CONSTANT, GOOGLE_AUTH_ERROR, INFO_CONSTANT, REMOVED_FROM_REQUEST_LIST, SUCCESS_CONSTANT, TOAST_CONSTANT, USER_IS_ADDED, WARNING_CONSTANT } from '../../Constants/ToasterContants';\nimport { toasterType } from '../../Models/ToasterModel';\nimport Toaster from '../Toaster';\nimport { callBack, uidExtractor } from '../../Helpers/CallBackHelper';\n\nconst FriendRequests = () => {\n\n    const [requests, setRequests] = useState({} as any);\n    const [users, setUsers] = useState({} as any);\n    const [toastDetails, setToastDetails] = useState(TOAST_CONSTANT);\n    const [changesDetails, setChangedDetails] = useState(false);\n\n\n    const resetToast = () => setToastDetails(TOAST_CONSTANT);\n\n    const getuserData = () => {\n        const userQuery = new FirebaseUser();\n        userQuery.getAllUsers()\n            .then(resultsUsers => {\n                setUsers(resultsUsers);\n                userQuery.getRequests()\n                    .then(res => res.exists() ? setRequests(res.val()) : null)\n                    .catch(error => WARNING_CONSTANT(GOOGLE_AUTH_ERROR));\n            })\n            .catch(error => WARNING_CONSTANT(GOOGLE_AUTH_ERROR))\n    };\n\n    useEffect(() => {\n        getuserData();\n    }, []);\n\n    useEffect(() => {\n        if (changesDetails) {\n            getuserData();\n            setChangedDetails(false);\n        }\n    }, [changesDetails]);\n\n    const handleAcceptRequest = (e: any, user: any, userId: any) => {\n        e.preventDefault();\n        const userQuery = new FirebaseUser();\n        userQuery.acceptFriendRequest(userId, uidExtractor(userQuery.getCurrentUser()?.email || \"\"))\n            .then(res => {\n                setChangedDetails(true);\n                setToastDetails(INFO_CONSTANT(USER_IS_ADDED));\n                callBack(1, resetToast);\n            })\n            .catch(error => {\n                setToastDetails(ERROR_CONSTANT(GOOGLE_AUTH_ERROR));\n                callBack(1, resetToast);\n            })\n    }\n\n    const handleRejectRequest = (e: any, user: any, userId: any) => {\n        e.preventDefault();\n        const userQuery = new FirebaseUser();\n        userQuery.rejectFriendRequest(uidExtractor(userQuery.getCurrentUser()?.email || \"\"), userId)\n            .then(res => {\n                setChangedDetails(true);\n                setToastDetails(SUCCESS_CONSTANT(REMOVED_FROM_REQUEST_LIST));\n                callBack(1, resetToast);\n            })\n            .catch(error => {\n                setToastDetails(ERROR_CONSTANT(GOOGLE_AUTH_ERROR));\n                callBack(1, resetToast);\n            })\n    }\n\n    return (\n        <section className=\"friendRequestMapper\">\n            <ul className=\"friendRequest\">\n                {Object.keys(requests).map((ele: any, i: number) => (\n                    requests[ele]\n                        ?\n                        <li key={i}>\n                            <div className=\"detailWrapper\">\n                                <div className=\"additonalDetails\">\n                                    <img src={ users[ele].profileUrl || \"https://socialtelecast.com/wp-content/uploads/2020/04/%C3%9Arsula-Corber%C3%B3.jpg\"} alt={\"profile pic\"} />\n                                    <div className=\"details\">\n                                        <span>{users[ele].name}</span>\n                                        <span>{users[ele].email}</span>\n                                    </div>\n                                </div>\n                                <div className=\"actionButton\">\n                                    <div onClick={(e) => handleAcceptRequest(e, users[ele], ele)}>\n                                        Accept\n                                    </div>\n                                    <div onClick={(e) => handleRejectRequest(e, users[ele], ele)}>\n                                        Ignore\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        : null\n                ))}\n            </ul>\n            {Object.keys(requests).length === 0 && (\n                <div className=\"noRequests\">No New Requests!!!</div>\n            )}\n            <Toaster time={1} message={toastDetails.message} type={toastDetails.type as toasterType} showToast={toastDetails.showToast} />\n        </section>\n    );\n}\n\nexport default FriendRequests;"],"sourceRoot":""}