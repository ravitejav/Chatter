{"version":3,"sources":["Components/AdditionalDetails/index.tsx","Helpers/CallBackHelper.tsx","Firebase/FirebaseUserDetails.tsx","Configs/FirebaseConfig.tsx","Firebase/FirebaseApp.tsx","Constants/DefaultValues.tsx","Constants/Firebase.tsx","Constants/ToasterContants.tsx","Components/Toaster/index.tsx","Constants/ValidatorDefaults.tsx","Helpers/Validators.tsx","Firebase/FirebaseStorage.tsx","Helpers/AdditionalDetails.tsx"],"names":["AdditionalDetails","useState","DEFAULT_ADDITONAL_DETAILS","addtionalDetial","setAdditionalDetails","TOAST_CONSTANT","toastDetails","setToastDetails","profilePicName","setProfiePicName","buttonStatus","setButtonStatus","history","useHistory","UpdateUserData","fileString","firebaseStorage","FirebaseStorage","Promise","resolve","reject","saveProfilePic","then","res","ref","getDownloadURL","result","profileUrl","catch","error","ERROR_CONSTANT","FAILED_TO_UPDATE","callBack","resetToast","className","onSubmit","e","preventDefault","Validate","NAME","name","verifyImage","target","document","getElementById","userObj","FirebaseUser","files","item","firbaseData","saveUserData","push","MISSING_DATA","type","required","placeholder","onChange","targetName","addtionalData","value","htmlFor","id","title","accept","disabled","time","message","showToast","callbackfunc","setTimeout","uidExtractor","email","replaceAll","getMessageId","userId","friendId","toLocaleLowerCase","sort","join","database","auth","this","FirebaseApp","child","currentUserMail","getCurrentUser","getUserRef","get","users","exists","val","NO_DATA_ERROR","callback","getCurrentuserRef","on","userDetails","currentuserEmail","update","updatedUsers","groupdId","updateUserGroupData","groupId","added","currentUser","requestUserId","all","set","Date","getTime","FIREBASE_CONFIG","apiKey","API_KEY","authDomain","PROJECT_ID","databaseURL","DATABASE","projectId","storageBucket","messagingSenderId","SENDER_ID","appId","measurementId","MEASUREMENT_ID","firebaseApp","firebase","apps","length","initializeApp","storage","LOGIN_OP","SIGNUP_OP","LOGIN_IMAGE","CREATE_GROUP","NAMESPACE","GROUP_CHAT","USER_CHAT","code","FIREBASE_VALUE","SUCCESS_CONSTANT","WARNING_CONSTANT","INFO_CONSTANT","INVALID_DETAILS","AUTH_ERROR","AUTH_SUCCESS","VERIFY_YOUR_MAIL","SIGNUP_ERROR","SIGNUP_SUCCESS","GOOGLE_AUTH_ERROR","MINIMUM_CHARS","FRIEND_REQ_SENT","FAILED_TO_SEND_REQ","USER_IS_ADDED","REMOVED_FROM_REQUEST_LIST","NOT_ABLE_SYNC","UPDATED_SUCCESSFULLY","NOT_ABLE_TO_CREATE_GROUP","Toaster","styles","showToaster","setShowToaster","useEffect","showToastMessage","hideToaster","customTypeForClass","getClassNames","style","icon","customType","faShieldAlt","faCheckCircle","faExclamationTriangle","faInfo","getIcons","EMAIL","PASSWORD","password","validators","test","String","toLowerCase","Emailvalidator","some","x","file","currentUserId","put","validity","valid","fileSize","size","split","pop"],"mappings":"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","file":"static/js/9.ddd2b78d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { DEFAULT_ADDITONAL_DETAILS } from '../../Constants/DefaultValues';\nimport { ERROR_CONSTANT, FAILED_TO_UPDATE, MISSING_DATA, TOAST_CONSTANT } from '../../Constants/ToasterContants';\nimport { NAME } from '../../Constants/ValidatorDefaults';\nimport { FirebaseStorage } from '../../Firebase/FirebaseStorage';\nimport { FirebaseUser } from '../../Firebase/FirebaseUserDetails';\nimport { verifyImage } from '../../Helpers/AdditionalDetails';\nimport { callBack } from '../../Helpers/CallBackHelper';\nimport { Validate } from '../../Helpers/Validators';\nimport { toasterType } from '../../Models/ToasterModel';\nimport { UserDetails } from '../../Models/UserModels';\nimport Toaster from '../Toaster';\nimport './AdditionalDetails.css';\n\nconst AdditionalDetails = () => {\n\n    const [addtionalDetial, setAdditionalDetails] = useState(DEFAULT_ADDITONAL_DETAILS);\n    const [toastDetails, setToastDetails] = useState(TOAST_CONSTANT);\n    const [profilePicName, setProfiePicName] = useState('');\n    const [buttonStatus, setButtonStatus] = useState(false);\n\n    const history = useHistory();\n\n    const handleSaving = (e: any) => {\n        e.preventDefault();\n        if (Validate(NAME, addtionalDetial.name) && verifyImage({ target: document.getElementById('profilePic') }, setProfiePicName)) {\n            const userObj = new FirebaseUser();\n            UpdateUserData((document.getElementById('profilePic') as HTMLInputElement)?.files?.item(0) as any)\n                .then((firbaseData: any) => {\n                    userObj.saveUserData({ ...addtionalDetial, ...firbaseData } as UserDetails)\n                        .then(res => {\n                            history.push(\"/Chatter/chat\");\n                        })\n                        .catch(error => {\n                            setToastDetails(ERROR_CONSTANT(FAILED_TO_UPDATE));\n                            setButtonStatus(false);\n                        });\n                }).catch(() => {\n                    setButtonStatus(false);\n                    //handle error\n                });\n        } else {\n            setToastDetails(ERROR_CONSTANT(MISSING_DATA));\n            callBack(1, resetToast);\n        }\n    }\n\n    const handleAdditionalDetails = (e: any) => {\n        const targetName = e?.target?.name;\n        setAdditionalDetails((addtionalData) => ({\n            ...addtionalData,\n            [targetName]: e?.target?.value,\n        }));\n    }\n\n    const UpdateUserData = (fileString: any) => {\n        const firebaseStorage = new FirebaseStorage();\n        return new Promise((resolve, reject) => {\n            setButtonStatus(true);\n            firebaseStorage.saveProfilePic(fileString).then((res) => {\n                res.ref.getDownloadURL()\n                    .then(result => {\n                        resolve({\n                            profileUrl: result,\n                        });\n                    }).catch(error => {\n                        reject(error);\n                        setToastDetails(ERROR_CONSTANT(FAILED_TO_UPDATE));\n                        callBack(1, resetToast);\n                    })\n            });\n        });\n    }\n\n    const resetToast = () => setToastDetails(TOAST_CONSTANT);\n\n    return (\n        <div className=\"additionalDetailsWrapper\">\n            <div className=\"additionalDetailsForm\">\n                <p>\n                    Please add additional Details to continue:\n                </p>\n                <form onSubmit={handleSaving}>\n                    <input type=\"text\" required placeholder=\"Full Name\" name=\"name\" onChange={handleAdditionalDetails} />\n                    <label htmlFor=\"profilePic\" className=\"center button\">Select your profile image...</label>\n                    <input id=\"profilePic\" type=\"file\" title={\"Select your profile image...\"} accept=\"image/png, image/gif, image/jpeg\" onChange={(e) => verifyImage(e, setProfiePicName)} />\n                    {profilePicName ? <span className=\"profilePicname\">{profilePicName}</span> : null}\n                    <button disabled={buttonStatus}>Save Details</button>\n                </form>\n            </div>\n            <Toaster time={1} message={toastDetails.message} type={toastDetails.type as toasterType} showToast={toastDetails.showToast} />\n        </div>\n    );\n}\n\nexport default AdditionalDetails;","export const callBack = (time: number, callbackfunc: any) => {\n  setTimeout(callbackfunc, time * 1000)\n}\n\nexport const uidExtractor = (email: string) => {\n  return email?.replaceAll('@', '').replaceAll('.', '') || ''\n}\n\nexport const getMessageId = (userId: string, friendId: string) => {\n  return [uidExtractor(userId.toLocaleLowerCase()), uidExtractor(friendId.toLocaleLowerCase())]\n    .sort()\n    .join('-')\n}\n","import firebase from 'firebase'\nimport { NO_DATA_ERROR } from '../Constants/Firebase'\nimport { uidExtractor } from '../Helpers/CallBackHelper'\nimport { UserDetails } from '../Models/UserModels'\n\nimport FirebaseApp from './FirebaseApp'\n\nexport class FirebaseUser {\n  private database: firebase.database.Database\n  private auth: firebase.auth.Auth\n\n  constructor() {\n    this.database = FirebaseApp.database()\n    this.auth = FirebaseApp.auth()\n  }\n\n  private getUserRef() {\n    return this.database.ref().child('users')\n  }\n\n  private getCurrentuserRef() {\n    const currentUserMail = uidExtractor(this.getCurrentUser()?.email || '')\n    return this.getUserRef().child(currentUserMail)\n  }\n\n  getAllUsers() {\n    return new Promise((resolve, reject) => {\n      this.getUserRef()\n        .get()\n        .then((users) => (users.exists() ? resolve(users.val()) : reject(NO_DATA_ERROR)))\n        .catch((error) => reject(NO_DATA_ERROR))\n    })\n  }\n\n  getCurrentUserData(callback: any) {\n    return this.getCurrentuserRef().on('value', callback)\n  }\n\n  getLiveUpdateOfUser(callBack: any) {\n    this.getUserRef().on('value', callBack)\n  }\n\n  getUserDetails(userId: string) {\n    return new Promise((resolve, reject) => {\n      this.getUserRef()\n        .child(uidExtractor(userId))\n        .get()\n        .then((userDetails) => {\n          userDetails.exists() ? resolve(userDetails.val()) : reject(NO_DATA_ERROR)\n        })\n        .catch((error) => {\n          reject(NO_DATA_ERROR)\n        })\n    })\n  }\n\n  public saveUserData(userDetails: UserDetails) {\n    const currentuserEmail = this.getCurrentUser()?.email || ''\n    return new Promise((resolve, reject) => {\n      this.getUserRef()\n        .get()\n        .then((users) => {\n          users.exists()\n            ? this.getUserRef()\n                .update({\n                  ...users.val(),\n                  [uidExtractor(currentuserEmail)]: {\n                    ...users.val()[uidExtractor(currentuserEmail)],\n                    ...userDetails,\n                    email: currentuserEmail,\n                  },\n                })\n                .then((updatedUsers) => resolve(updatedUsers))\n                .catch((error) => reject(error))\n            : reject(NO_DATA_ERROR)\n        })\n        .catch((error) => reject(error))\n    })\n  }\n\n  public removeFromGroup(groupdId: string) {\n    return this.updateUserGroupData(\n      uidExtractor(this.getCurrentUser()?.email || ''),\n      groupdId,\n      false\n    )\n  }\n\n  public updateUserGroupData(userId: string, groupId: string, added: boolean = true) {\n    return this.getUserRef()\n      .child(userId)\n      .child('groups')\n      .update({\n        [groupId]: added,\n      })\n  }\n\n  public getCurrentUser() {\n    return this.auth.currentUser\n  }\n\n  public sendRequest(userId: string, requestUserId: string) {\n    return this.getUserRef()\n      .child(requestUserId)\n      .child('requests')\n      .update({\n        [userId]: true,\n      })\n  }\n\n  public getRequests() {\n    return this.getCurrentuserRef().child('requests').get()\n  }\n\n  acceptFriendRequest(friendId: string, userId: string) {\n    return Promise.all([\n      this.getUserRef().child(userId).child('friends').child(friendId).set(true),\n      this.getUserRef().child(friendId).child('friends').child(userId).set(true),\n      this.getUserRef()\n        .child(userId)\n        .child('requests')\n        .update({\n          [friendId]: null,\n        }),\n    ])\n  }\n\n  rejectFriendRequest(userId: string, friendId: string) {\n    return this.getUserRef()\n      .child(userId)\n      .child('requests')\n      .update({\n        [friendId]: null,\n      })\n  }\n\n  getMyFriends(callback: any) {\n    return this.getCurrentuserRef().child('/friends/').on('value', callback)\n  }\n\n  activateUser() {\n    return this.getCurrentuserRef().child('active').set(true)\n  }\n\n  deactivateUser() {\n    return this.getCurrentuserRef().child('active').set(new Date().getTime())\n  }\n}\n","import { API_KEY, DATABASE, MEASUREMENT_ID, PROJECT_ID, SENDER_ID } from '../Constants/Firebase'\n\nexport const FIREBASE_CONFIG = {\n  apiKey: `${API_KEY}`,\n  authDomain: `${PROJECT_ID}.firebaseapp.com`,\n  databaseURL: `https://${DATABASE}.firebaseio.com`,\n  projectId: `${PROJECT_ID}`,\n  storageBucket: `${PROJECT_ID}.appspot.com`,\n  messagingSenderId: `${SENDER_ID}`,\n  appId: `${SENDER_ID}`,\n  measurementId: `${MEASUREMENT_ID}`,\n}\n","import firebase from 'firebase'\n\nimport { FIREBASE_CONFIG } from '../Configs/FirebaseConfig'\n\nclass FirebaseApp {\n  private firebaseApp: firebase.app.App\n\n  constructor() {\n    if (firebase.apps.length < 1) {\n      this.firebaseApp = firebase.initializeApp(FIREBASE_CONFIG)\n    } else {\n      this.firebaseApp = firebase.apps[0]\n    }\n  }\n\n  public auth(): firebase.auth.Auth {\n    return this.firebaseApp.auth()\n  }\n\n  public database(): firebase.database.Database {\n    return this.firebaseApp.database()\n  }\n\n  public storage(): firebase.storage.Storage {\n    return this.firebaseApp.storage()\n  }\n}\n\nexport default new FirebaseApp()\n","export const LOGIN_OP = 'LOGIN_OP'\nexport const SIGNUP_OP = 'SIGNUP_OP'\nexport const LOGIN_IMAGE =\n  'https://firebasestorage.googleapis.com/v0/b/chatter-app-one-on-one.appspot.com/o/loginImage.jpeg?alt=media&token=09f5d322-c617-499a-aace-573a2ddf737e'\nexport const ERROR = 'ERROR'\nexport const SUCCESS = 'SUCCESS'\nexport const WARNING = 'WARNING'\nexport const DEFAULT_ADDITONAL_DETAILS = { name: '' }\nexport const SEARCH_USER = 'SEARCH_USER'\nexport const CREATE_GROUP = 'CREATE_GROUP'\nexport const NAMESPACE = 'eaf083c1-1279-48d1-87e4-c5ce02eae56f'\nexport const GROUP_CHAT = 'GROUP_CHAT'\nexport const USER_CHAT = 'USER_CHAT'\n","// Keys for firebase config\nexport const API_KEY = 'AIzaSyBOJETyCSbUiUsVuVF4YLXWKKW0HfOgw3o'\nexport const PROJECT_ID = 'chatter-app-one-on-one'\nexport const DATABASE = 'chatter-app-one-on-one-default-rtdb'\nexport const SENDER_ID = '667912198050'\nexport const APP_ID = '1:667912198050:web:202f7f325cc6bbe29844fb'\nexport const MEASUREMENT_ID = 'G-RHV4CQS211'\n\nexport const NO_DATA_ERROR = { code: '404', message: 'DATA NOT AVAILABLE' }\n\nexport const CHILD_CHANGED = 'child_changed'\nexport const CHILD_ADDED = 'child_added'\nexport const FIREBASE_VALUE = 'value'\n","import { toasterType } from '../Models/ToasterModel'\n\nexport const TOAST_CONSTANT = {\n  message: '',\n  type: 'NON',\n  showToast: false,\n}\nexport const ERROR_CONSTANT = (message: string) => ({\n  message,\n  type: 'ERROR' as toasterType,\n  showToast: true,\n})\nexport const SUCCESS_CONSTANT = (message: string) => ({\n  message,\n  type: 'SUCCESS' as toasterType,\n  showToast: true,\n})\nexport const WARNING_CONSTANT = (message: string) => ({\n  message,\n  type: 'WARNING' as toasterType,\n  showToast: true,\n})\nexport const INFO_CONSTANT = (message: string) => ({\n  message,\n  type: 'NON' as toasterType,\n  showToast: true,\n})\n\nexport const INVALID_DETAILS = 'Invalid Username or Password'\nexport const AUTH_ERROR = \"Username and Password didn't match, please check\"\nexport const AUTH_SUCCESS = 'Successfully Loggedin'\nexport const VERIFY_YOUR_MAIL = 'Please verify your mailID.'\nexport const SIGNUP_ERROR = 'Failed to Signup, something went wrong'\nexport const SIGNUP_SUCCESS = 'Successfully signed up!!!, please verify your mail'\nexport const GOOGLE_AUTH_ERROR = 'Something went wrong'\nexport const INVALID_NAME = 'Name must have 8 letters'\nexport const FAILED_TO_UPDATE = 'Failed to update data, please try again later!!!'\nexport const MINIMUM_CHARS = 'Please eneter atleast 3 letters to search!'\nexport const FRIEND_REQ_SENT = (name: string) => `Your request is sent to the ${name}`\nexport const FAILED_TO_SEND_REQ = (name: string) => `Failed to send your request to the ${name}`\nexport const USER_IS_ADDED = 'Added to user list!!'\nexport const REMOVED_FROM_REQUEST_LIST = 'Request is removed!!'\nexport const NOT_ABLE_SYNC = 'Not able to update, please check your internet connection !!!'\nexport const FILE_ERROR = 'File format is not supported or file size is greater then 1MB'\nexport const UPDATED_SUCCESSFULLY = 'Details Update successfully!!!'\nexport const MISSING_DATA = 'Please add all required data or file is larger...'\nexport const NOT_ABLE_TO_CREATE_GROUP = 'Not able to create the group...'\n","import { faCheckCircle, faExclamationTriangle, faInfo, faShieldAlt, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { callBack } from '../../Helpers/CallBackHelper';\nimport { ToasterProps, toasterType } from '../../Models/ToasterModel';\nimport './Toaster.css';\n\nconst Toaster = ({ time, message, type, styles = {}, showToast = false }: ToasterProps) => {\n\n    const [showToaster, setShowToaster] = useState(false);\n\n    useEffect(() => {\n        if(showToast) {\n            showToastMessage();\n        }\n    }, [showToast]);\n\n    const showToastMessage = () => {\n        setShowToaster(true);\n        callBack(time, hideToaster);\n    }\n\n    const hideToaster = () => setShowToaster(false);\n\n    const getClassNames = (customTypeForClass: toasterType) => {\n        switch (customTypeForClass) {\n            case \"ERROR\": return \"toastWrapper error\";\n            case \"SUCCESS\": return \"toastWrapper success\";\n            case \"WARNING\": return \"toastWrapper warning\";\n            default: return \"toastWrapper info\";\n        }\n    }\n\n    const getIcons = (customType: toasterType): IconDefinition => {\n        switch (customType) {\n            case \"ERROR\": return faShieldAlt;\n            case \"SUCCESS\": return faCheckCircle;\n            case \"WARNING\": return faExclamationTriangle;\n            default: return faInfo;\n        }\n    }\n\n    return (\n        showToaster\n            ? (\n                <div className={getClassNames(type)} style={styles}>\n                    <div className=\"iconWrapper\">\n                        <FontAwesomeIcon icon={getIcons(type)} />\n                    </div>\n                    <div className=\"messageWrapper\">\n                        {message}\n                    </div>\n                </div>\n            ) : null\n    );\n}\n\nexport default Toaster;","export const EMAIL = 'EMAIL'\nexport const PASSWORD = 'PASSWORD'\nexport const NAME = 'NAME'\n","import { EMAIL, NAME, PASSWORD } from '../Constants/ValidatorDefaults'\n\nexport const Emailvalidator = (email: string) => {\n  if (email !== '') {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return re.test(String(email).toLowerCase())\n  }\n  return false\n}\n\nexport const passwordValidator = (password: string) => {\n  if (password !== '' && password.length >= 8) {\n    return true\n  }\n  return false\n}\n\nexport const nameValidator = (name: string) => {\n  if (name !== '' && name.length >= 8) {\n    return true\n  }\n  return false\n}\n\nexport const Validate = (type: string, value: any) => {\n  const validators = []\n\n  if (type === EMAIL) {\n    validators.push(Emailvalidator(value))\n  }\n  if (type === PASSWORD) {\n    validators.push(passwordValidator(value))\n  }\n  if (type === NAME) {\n    validators.push(nameValidator(value))\n  }\n\n  return !validators.some((x) => !x)\n}\n","import firebase from 'firebase'\nimport { uidExtractor } from '../Helpers/CallBackHelper'\nimport FirebaseApp from './FirebaseApp'\n\nexport class FirebaseStorage {\n  private auth: firebase.auth.Auth\n  private storage: firebase.storage.Storage\n\n  constructor() {\n    const firebaseApp = FirebaseApp\n    this.storage = firebaseApp.storage()\n    this.auth = firebaseApp.auth()\n  }\n\n  private getCurrentUser() {\n    return this.auth.currentUser\n  }\n\n  saveProfilePic(file: any) {\n    const currentUserId = uidExtractor(this.getCurrentUser()?.email || '')\n    return this.storage.ref('/profilePic/' + currentUserId).put(file)\n  }\n\n  // getProfilePic(id: string) {}\n}\n","export const verifyImage = (e: any, setProfiePicName: any, id = 'profilePic') => {\n  if (e.target.validity.valid) {\n    const fileSize = (document.getElementById(id) as HTMLInputElement)?.files?.item(0)?.size || 0\n    if (fileSize / 1024 > 1024 || fileSize === 0) {\n      return false\n    } else {\n      setProfiePicName(e.target.value.split('\\\\').pop())\n      return true\n    }\n  }\n}\n"],"sourceRoot":""}