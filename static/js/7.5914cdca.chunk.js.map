{"version":3,"sources":["Components/GroupChat/index.tsx","Components/Profile/index.tsx","Components/HomePage/index.tsx","Helpers/CallBackHelper.tsx","Firebase/FirebaseUserDetails.tsx","Configs/FirebaseConfig.tsx","Firebase/FirebaseApp.tsx","Constants/DefaultValues.tsx","Constants/Firebase.tsx","Constants/ToasterContants.tsx","Components/Toaster/index.tsx","Constants/ValidatorDefaults.tsx","Helpers/Validators.tsx","Firebase/FirebaseStorage.tsx","Helpers/AdditionalDetails.tsx"],"names":["GroupChatList","React","lazy","MessageInput","UserChatHeader","Messages","GroupChat","useState","activeGroup","setActiveGroup","className","Object","keys","length","type","GROUP_CHAT","handleRestGroup","Profile","profilePicName","setProfiePicName","additionalDetails","setAdditionalDetails","TOAST_CONSTANT","toastDetails","setToastDetails","useEffect","FirebaseUser","getCurrentUserData","res","val","UpdateUserData","fileString","Validate","NAME","name","FirebaseStorage","saveProfilePic","then","ref","getDownloadURL","result","UpdateadditionalDetails","catch","error","ERROR_CONSTANT","FAILED_TO_UPDATE","callBack","resetToast","downloadURL","firebaseUser","userDetails","saveUserData","SUCCESS_CONSTANT","UPDATED_SUCCESSFULLY","onSubmit","e","preventDefault","placeholder","onChange","target","value","htmlFor","id","title","accept","verifyImage","onClick","document","getElementById","files","item","Toaster","time","message","showToast","SideBar","FriendRequests","MessageContainer","HomePage","props","urlMatcher","matcher","match","params","includes","userFirebase","activateUser","window","addEventListener","deactivateUser","callbackfunc","setTimeout","uidExtractor","email","replaceAll","getMessageId","userId","friendId","toLocaleLowerCase","sort","join","database","auth","this","FirebaseApp","child","currentUserMail","getCurrentUser","getUserRef","Promise","resolve","reject","get","users","exists","NO_DATA_ERROR","callback","getCurrentuserRef","on","currentuserEmail","update","updatedUsers","groupdId","updateUserGroupData","groupId","added","currentUser","requestUserId","all","set","Date","getTime","FIREBASE_CONFIG","apiKey","API_KEY","authDomain","PROJECT_ID","databaseURL","DATABASE","projectId","storageBucket","messagingSenderId","SENDER_ID","appId","measurementId","MEASUREMENT_ID","firebaseApp","firebase","apps","initializeApp","storage","LOGIN_OP","SIGNUP_OP","LOGIN_IMAGE","DEFAULT_ADDITONAL_DETAILS","CREATE_GROUP","NAMESPACE","USER_CHAT","code","FIREBASE_VALUE","WARNING_CONSTANT","INFO_CONSTANT","INVALID_DETAILS","AUTH_ERROR","AUTH_SUCCESS","VERIFY_YOUR_MAIL","SIGNUP_ERROR","SIGNUP_SUCCESS","GOOGLE_AUTH_ERROR","MINIMUM_CHARS","FRIEND_REQ_SENT","FAILED_TO_SEND_REQ","USER_IS_ADDED","REMOVED_FROM_REQUEST_LIST","NOT_ABLE_SYNC","MISSING_DATA","NOT_ABLE_TO_CREATE_GROUP","styles","showToaster","setShowToaster","showToastMessage","hideToaster","customTypeForClass","getClassNames","style","icon","customType","faShieldAlt","faCheckCircle","faExclamationTriangle","faInfo","getIcons","EMAIL","PASSWORD","password","validators","push","test","String","toLowerCase","Emailvalidator","some","x","file","currentUserId","put","validity","valid","fileSize","size","split","pop"],"mappings":"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","file":"static/js/7.5914cdca.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GROUP_CHAT } from '../../Constants/DefaultValues';\nimport { GroupDetails } from '../../Models/CreateGroup';\n\nimport './GroupChat.css';\n\nconst GroupChatList = React.lazy(() => import('../GroupChatList'));\nconst MessageInput = React.lazy(() => import('../MessageInput'));\nconst UserChatHeader = React.lazy(() => import('../UserChatHeader'));\nconst Messages = React.lazy(() => import('../Messages'));\n\n\n\nexport const GroupChat = () => {\n\n    const [activeGroup, setActiveGroup] = useState({} as GroupDetails);\n\n    const handleExitGroup = () => setActiveGroup({} as GroupDetails);\n    \n    return (\n        <div className=\"GroupChatWrapper\">\n            <div className=\"GroupChatList\">\n                <GroupChatList setActiveGroup={setActiveGroup} />\n            </div>\n            <div className=\"GroupChatMessages\">\n                {Object.keys(activeGroup).length > 0 && (\n                    <>\n                        <div className=\"chatHeader\">\n                            <UserChatHeader \n                                activeGroup={activeGroup} \n                                type={GROUP_CHAT} \n                                handleRestGroup={handleExitGroup} \n                            />\n                        </div>\n                        <div className=\"messages\">\n                            <Messages activeGroup={activeGroup} />\n                        </div>\n                        <div className=\"messageInput\">\n                            <MessageInput activeGroup={activeGroup} />\n                        </div>\n                    </>\n                )}\n                {Object.keys(activeGroup).length <= 0 && ( \n                    <div className=\"typewriter center\">\n                        <h1>Choose a group to chat...</h1>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport firebase from 'firebase';\n\nimport { ERROR_CONSTANT, FAILED_TO_UPDATE, SUCCESS_CONSTANT, TOAST_CONSTANT, UPDATED_SUCCESSFULLY } from '../../Constants/ToasterContants';\nimport { NAME } from '../../Constants/ValidatorDefaults';\nimport { FirebaseUser } from '../../Firebase/FirebaseUserDetails';\nimport { callBack } from '../../Helpers/CallBackHelper';\nimport { Validate } from '../../Helpers/Validators';\nimport { toasterType } from '../../Models/ToasterModel';\nimport Toaster from '../Toaster';\nimport './Profile.css';\nimport { FirebaseStorage } from '../../Firebase/FirebaseStorage';\nimport { verifyImage } from '../../Helpers/AdditionalDetails';\n\nexport const Profile = () => {\n\n    const [profilePicName, setProfiePicName] = useState('');\n    const [additionalDetails, setAdditionalDetails] = useState({} as any);\n    const [toastDetails, setToastDetails] = useState(TOAST_CONSTANT);\n\n    useEffect(() => {\n        const firebaseUser = new FirebaseUser();\n        firebaseUser.getCurrentUserData((res: firebase.database.DataSnapshot) => setAdditionalDetails(res.val()));\n    }, []);\n\n    const handleFormUpdate = (e: any) => {\n        e.preventDefault();\n        if (profilePicName !== '') {\n            UpdateUserData((document.getElementById('profilePic') as HTMLInputElement)?.files?.item(0) as any);\n        } else {\n            UpdateUserData(null)\n        }\n    }\n\n    const UpdateUserData = (fileString: any) => {\n        if (fileString && Validate(NAME, additionalDetails.name)) {\n            const firebaseStorage = new FirebaseStorage();\n            firebaseStorage.saveProfilePic(fileString).then((res) => {\n                res.ref.getDownloadURL()\n                    .then(result => {\n                        UpdateadditionalDetails(result);\n                    }).catch(error => {\n                        setToastDetails(ERROR_CONSTANT(FAILED_TO_UPDATE));\n                        callBack(1, resetToast);\n                    })\n            });\n        } else {\n            if (Validate(NAME, additionalDetails.name)) {\n                UpdateadditionalDetails()\n            } else {\n                setToastDetails(ERROR_CONSTANT(FAILED_TO_UPDATE));\n                callBack(1, resetToast);\n            }\n        }\n    }\n\n    const UpdateadditionalDetails = (downloadURL?: any) => {\n        const firebaseUser = new FirebaseUser();\n        const userDetails = {\n            ...additionalDetails,\n        }\n        if (downloadURL) {\n            userDetails[\"profileUrl\"] = downloadURL;\n        }\n        firebaseUser.saveUserData(userDetails)\n            .then(res => {\n                setToastDetails(SUCCESS_CONSTANT(UPDATED_SUCCESSFULLY));\n                callBack(1, resetToast);\n            })\n            .catch(error => {\n                setToastDetails(ERROR_CONSTANT(FAILED_TO_UPDATE));\n                callBack(1, resetToast);\n            })\n    }\n\n    const handleAdditionalDetails = (e: any) => {\n        setAdditionalDetails({\n            ...additionalDetails,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n\n    const resetToast = () => setToastDetails(TOAST_CONSTANT);\n\n    return (\n        <section className=\"profileWrapper center\">\n            <div className=\"profile center\">\n                <h3>\n                    Update your profile\n                </h3>\n                <form className=\"center\" onSubmit={(e) => e.preventDefault()}>\n                    <input type=\"text\" name=\"name\" placeholder={\"Enter your name....\"} onChange={handleAdditionalDetails} value={additionalDetails.name} />\n                    <label htmlFor=\"profilePic\" className=\"center button\">Select your profile image...</label>\n                    <input id=\"profilePic\" type=\"file\" title={\"Select your profile image...\"} accept=\"image/png, image/gif, image/jpeg\" onChange={(e) => verifyImage(e, setProfiePicName)} />\n                    {profilePicName ? <span className=\"profilePicname\">{profilePicName}</span> : null}\n                    <div className=\"submitButton button\" onClick={handleFormUpdate}>\n                        Save Updates\n                    </div>\n                </form>\n            </div>\n            <Toaster time={1} message={toastDetails.message} type={toastDetails.type as toasterType} showToast={toastDetails.showToast} />\n        </section>\n    );\n\n}","import { lazy, useEffect } from 'react';\nimport { FirebaseUser } from '../../Firebase/FirebaseUserDetails';\nimport { GroupChat } from '../GroupChat';\nimport { Profile } from '../Profile';\nimport './HomePage.css';\n\nconst SideBar = lazy(() => import('../SideBar'));\nconst FriendRequests = lazy(() => import('../FriendRequests'));\nconst MessageContainer = lazy(() => import('../MessageContainer'));\n\nconst HomePage = (props: any) => {\n\n    const urlMatcher = (matcher: string) => props.match.params.id.includes(matcher);\n\n    useEffect(() => {\n        const userFirebase = new FirebaseUser();\n        userFirebase.activateUser().then().catch();\n        window.addEventListener('beforeunload', () => {\n            userFirebase.deactivateUser().then().catch();\n        })\n    }, []);\n\n    return (\n        <main className=\"mainApp\">\n            <div className=\"sidebar\">\n                <SideBar />\n            </div>\n            <div className=\"messageBox\">\n                {urlMatcher('friendRequests') && (\n                    <FriendRequests />\n                )}\n                {urlMatcher('chat') && (\n                    <MessageContainer />\n                )}\n                {urlMatcher('profile') && (\n                    <Profile />\n                )}\n                {urlMatcher('groupChat') && (\n                    <GroupChat />\n                )}\n            </div>\n        </main>\n    );\n}\n\nexport default HomePage;","export const callBack = (time: number, callbackfunc: any) => {\n  setTimeout(callbackfunc, time * 1000)\n}\n\nexport const uidExtractor = (email: string) => {\n  return email?.replaceAll('@', '').replaceAll('.', '') || ''\n}\n\nexport const getMessageId = (userId: string, friendId: string) => {\n  return [uidExtractor(userId.toLocaleLowerCase()), uidExtractor(friendId.toLocaleLowerCase())]\n    .sort()\n    .join('-')\n}\n","import firebase from 'firebase'\nimport { NO_DATA_ERROR } from '../Constants/Firebase'\nimport { uidExtractor } from '../Helpers/CallBackHelper'\nimport { UserDetails } from '../Models/UserModels'\n\nimport FirebaseApp from './FirebaseApp'\n\nexport class FirebaseUser {\n  private database: firebase.database.Database\n  private auth: firebase.auth.Auth\n\n  constructor() {\n    this.database = FirebaseApp.database()\n    this.auth = FirebaseApp.auth()\n  }\n\n  private getUserRef() {\n    return this.database.ref().child('users')\n  }\n\n  private getCurrentuserRef() {\n    const currentUserMail = uidExtractor(this.getCurrentUser()?.email || '')\n    return this.getUserRef().child(currentUserMail)\n  }\n\n  getAllUsers() {\n    return new Promise((resolve, reject) => {\n      this.getUserRef()\n        .get()\n        .then((users) => (users.exists() ? resolve(users.val()) : reject(NO_DATA_ERROR)))\n        .catch((error) => reject(NO_DATA_ERROR))\n    })\n  }\n\n  getCurrentUserData(callback: any) {\n    return this.getCurrentuserRef().on('value', callback)\n  }\n\n  getLiveUpdateOfUser(callBack: any) {\n    this.getUserRef().on('value', callBack)\n  }\n\n  getUserDetails(userId: string) {\n    return new Promise((resolve, reject) => {\n      this.getUserRef()\n        .child(uidExtractor(userId))\n        .get()\n        .then((userDetails) => {\n          userDetails.exists() ? resolve(userDetails.val()) : reject(NO_DATA_ERROR)\n        })\n        .catch((error) => {\n          reject(NO_DATA_ERROR)\n        })\n    })\n  }\n\n  public saveUserData(userDetails: UserDetails) {\n    const currentuserEmail = this.getCurrentUser()?.email || ''\n    return new Promise((resolve, reject) => {\n      this.getUserRef()\n        .get()\n        .then((users) => {\n          users.exists()\n            ? this.getUserRef()\n                .update({\n                  ...users.val(),\n                  [uidExtractor(currentuserEmail)]: {\n                    ...users.val()[uidExtractor(currentuserEmail)],\n                    ...userDetails,\n                    email: currentuserEmail,\n                  },\n                })\n                .then((updatedUsers) => resolve(updatedUsers))\n                .catch((error) => reject(error))\n            : reject(NO_DATA_ERROR)\n        })\n        .catch((error) => reject(error))\n    })\n  }\n\n  public removeFromGroup(groupdId: string) {\n    return this.updateUserGroupData(\n      uidExtractor(this.getCurrentUser()?.email || ''),\n      groupdId,\n      false\n    )\n  }\n\n  public updateUserGroupData(userId: string, groupId: string, added: boolean = true) {\n    return this.getUserRef()\n      .child(userId)\n      .child('groups')\n      .update({\n        [groupId]: added,\n      })\n  }\n\n  public getCurrentUser() {\n    return this.auth.currentUser\n  }\n\n  public sendRequest(userId: string, requestUserId: string) {\n    return this.getUserRef()\n      .child(requestUserId)\n      .child('requests')\n      .update({\n        [userId]: true,\n      })\n  }\n\n  public getRequests() {\n    return this.getCurrentuserRef().child('requests').get()\n  }\n\n  acceptFriendRequest(friendId: string, userId: string) {\n    return Promise.all([\n      this.getUserRef().child(userId).child('friends').child(friendId).set(true),\n      this.getUserRef().child(friendId).child('friends').child(userId).set(true),\n      this.getUserRef()\n        .child(userId)\n        .child('requests')\n        .update({\n          [friendId]: null,\n        }),\n    ])\n  }\n\n  rejectFriendRequest(userId: string, friendId: string) {\n    return this.getUserRef()\n      .child(userId)\n      .child('requests')\n      .update({\n        [friendId]: null,\n      })\n  }\n\n  getMyFriends(callback: any) {\n    return this.getCurrentuserRef().child('/friends/').on('value', callback)\n  }\n\n  activateUser() {\n    return this.getCurrentuserRef().child('active').set(true)\n  }\n\n  deactivateUser() {\n    return this.getCurrentuserRef().child('active').set(new Date().getTime())\n  }\n}\n","import { API_KEY, DATABASE, MEASUREMENT_ID, PROJECT_ID, SENDER_ID } from '../Constants/Firebase'\n\nexport const FIREBASE_CONFIG = {\n  apiKey: `${API_KEY}`,\n  authDomain: `${PROJECT_ID}.firebaseapp.com`,\n  databaseURL: `https://${DATABASE}.firebaseio.com`,\n  projectId: `${PROJECT_ID}`,\n  storageBucket: `${PROJECT_ID}.appspot.com`,\n  messagingSenderId: `${SENDER_ID}`,\n  appId: `${SENDER_ID}`,\n  measurementId: `${MEASUREMENT_ID}`,\n}\n","import firebase from 'firebase'\n\nimport { FIREBASE_CONFIG } from '../Configs/FirebaseConfig'\n\nclass FirebaseApp {\n  private firebaseApp: firebase.app.App\n\n  constructor() {\n    if (firebase.apps.length < 1) {\n      this.firebaseApp = firebase.initializeApp(FIREBASE_CONFIG)\n    } else {\n      this.firebaseApp = firebase.apps[0]\n    }\n  }\n\n  public auth(): firebase.auth.Auth {\n    return this.firebaseApp.auth()\n  }\n\n  public database(): firebase.database.Database {\n    return this.firebaseApp.database()\n  }\n\n  public storage(): firebase.storage.Storage {\n    return this.firebaseApp.storage()\n  }\n}\n\nexport default new FirebaseApp()\n","export const LOGIN_OP = 'LOGIN_OP'\nexport const SIGNUP_OP = 'SIGNUP_OP'\nexport const LOGIN_IMAGE =\n  'https://firebasestorage.googleapis.com/v0/b/chatter-app-one-on-one.appspot.com/o/loginImage.jpeg?alt=media&token=09f5d322-c617-499a-aace-573a2ddf737e'\nexport const ERROR = 'ERROR'\nexport const SUCCESS = 'SUCCESS'\nexport const WARNING = 'WARNING'\nexport const DEFAULT_ADDITONAL_DETAILS = { name: '' }\nexport const SEARCH_USER = 'SEARCH_USER'\nexport const CREATE_GROUP = 'CREATE_GROUP'\nexport const NAMESPACE = 'eaf083c1-1279-48d1-87e4-c5ce02eae56f'\nexport const GROUP_CHAT = 'GROUP_CHAT'\nexport const USER_CHAT = 'USER_CHAT'\n","// Keys for firebase config\nexport const API_KEY = 'AIzaSyBOJETyCSbUiUsVuVF4YLXWKKW0HfOgw3o'\nexport const PROJECT_ID = 'chatter-app-one-on-one'\nexport const DATABASE = 'chatter-app-one-on-one-default-rtdb'\nexport const SENDER_ID = '667912198050'\nexport const APP_ID = '1:667912198050:web:202f7f325cc6bbe29844fb'\nexport const MEASUREMENT_ID = 'G-RHV4CQS211'\n\nexport const NO_DATA_ERROR = { code: '404', message: 'DATA NOT AVAILABLE' }\n\nexport const CHILD_CHANGED = 'child_changed'\nexport const CHILD_ADDED = 'child_added'\nexport const FIREBASE_VALUE = 'value'\n","import { toasterType } from '../Models/ToasterModel'\n\nexport const TOAST_CONSTANT = {\n  message: '',\n  type: 'NON',\n  showToast: false,\n}\nexport const ERROR_CONSTANT = (message: string) => ({\n  message,\n  type: 'ERROR' as toasterType,\n  showToast: true,\n})\nexport const SUCCESS_CONSTANT = (message: string) => ({\n  message,\n  type: 'SUCCESS' as toasterType,\n  showToast: true,\n})\nexport const WARNING_CONSTANT = (message: string) => ({\n  message,\n  type: 'WARNING' as toasterType,\n  showToast: true,\n})\nexport const INFO_CONSTANT = (message: string) => ({\n  message,\n  type: 'NON' as toasterType,\n  showToast: true,\n})\n\nexport const INVALID_DETAILS = 'Invalid Username or Password'\nexport const AUTH_ERROR = \"Username and Password didn't match, please check\"\nexport const AUTH_SUCCESS = 'Successfully Loggedin'\nexport const VERIFY_YOUR_MAIL = 'Please verify your mailID.'\nexport const SIGNUP_ERROR = 'Failed to Signup, something went wrong'\nexport const SIGNUP_SUCCESS = 'Successfully signed up!!!, please verify your mail'\nexport const GOOGLE_AUTH_ERROR = 'Something went wrong'\nexport const INVALID_NAME = 'Name must have 8 letters'\nexport const FAILED_TO_UPDATE = 'Failed to update data, please try again later!!!'\nexport const MINIMUM_CHARS = 'Please eneter atleast 3 letters to search!'\nexport const FRIEND_REQ_SENT = (name: string) => `Your request is sent to the ${name}`\nexport const FAILED_TO_SEND_REQ = (name: string) => `Failed to send your request to the ${name}`\nexport const USER_IS_ADDED = 'Added to user list!!'\nexport const REMOVED_FROM_REQUEST_LIST = 'Request is removed!!'\nexport const NOT_ABLE_SYNC = 'Not able to update, please check your internet connection !!!'\nexport const FILE_ERROR = 'File format is not supported or file size is greater then 1MB'\nexport const UPDATED_SUCCESSFULLY = 'Details Update successfully!!!'\nexport const MISSING_DATA = 'Please add all required data or file is larger...'\nexport const NOT_ABLE_TO_CREATE_GROUP = 'Not able to create the group...'\n","import { faCheckCircle, faExclamationTriangle, faInfo, faShieldAlt, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { callBack } from '../../Helpers/CallBackHelper';\nimport { ToasterProps, toasterType } from '../../Models/ToasterModel';\nimport './Toaster.css';\n\nconst Toaster = ({ time, message, type, styles = {}, showToast = false }: ToasterProps) => {\n\n    const [showToaster, setShowToaster] = useState(false);\n\n    useEffect(() => {\n        if(showToast) {\n            showToastMessage();\n        }\n    }, [showToast]);\n\n    const showToastMessage = () => {\n        setShowToaster(true);\n        callBack(time, hideToaster);\n    }\n\n    const hideToaster = () => setShowToaster(false);\n\n    const getClassNames = (customTypeForClass: toasterType) => {\n        switch (customTypeForClass) {\n            case \"ERROR\": return \"toastWrapper error\";\n            case \"SUCCESS\": return \"toastWrapper success\";\n            case \"WARNING\": return \"toastWrapper warning\";\n            default: return \"toastWrapper info\";\n        }\n    }\n\n    const getIcons = (customType: toasterType): IconDefinition => {\n        switch (customType) {\n            case \"ERROR\": return faShieldAlt;\n            case \"SUCCESS\": return faCheckCircle;\n            case \"WARNING\": return faExclamationTriangle;\n            default: return faInfo;\n        }\n    }\n\n    return (\n        showToaster\n            ? (\n                <div className={getClassNames(type)} style={styles}>\n                    <div className=\"iconWrapper\">\n                        <FontAwesomeIcon icon={getIcons(type)} />\n                    </div>\n                    <div className=\"messageWrapper\">\n                        {message}\n                    </div>\n                </div>\n            ) : null\n    );\n}\n\nexport default Toaster;","export const EMAIL = 'EMAIL'\nexport const PASSWORD = 'PASSWORD'\nexport const NAME = 'NAME'\n","import { EMAIL, NAME, PASSWORD } from '../Constants/ValidatorDefaults'\n\nexport const Emailvalidator = (email: string) => {\n  if (email !== '') {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return re.test(String(email).toLowerCase())\n  }\n  return false\n}\n\nexport const passwordValidator = (password: string) => {\n  if (password !== '' && password.length >= 8) {\n    return true\n  }\n  return false\n}\n\nexport const nameValidator = (name: string) => {\n  if (name !== '' && name.length >= 8) {\n    return true\n  }\n  return false\n}\n\nexport const Validate = (type: string, value: any) => {\n  const validators = []\n\n  if (type === EMAIL) {\n    validators.push(Emailvalidator(value))\n  }\n  if (type === PASSWORD) {\n    validators.push(passwordValidator(value))\n  }\n  if (type === NAME) {\n    validators.push(nameValidator(value))\n  }\n\n  return !validators.some((x) => !x)\n}\n","import firebase from 'firebase'\nimport { uidExtractor } from '../Helpers/CallBackHelper'\nimport FirebaseApp from './FirebaseApp'\n\nexport class FirebaseStorage {\n  private auth: firebase.auth.Auth\n  private storage: firebase.storage.Storage\n\n  constructor() {\n    const firebaseApp = FirebaseApp\n    this.storage = firebaseApp.storage()\n    this.auth = firebaseApp.auth()\n  }\n\n  private getCurrentUser() {\n    return this.auth.currentUser\n  }\n\n  saveProfilePic(file: any) {\n    const currentUserId = uidExtractor(this.getCurrentUser()?.email || '')\n    return this.storage.ref('/profilePic/' + currentUserId).put(file)\n  }\n\n  // getProfilePic(id: string) {}\n}\n","export const verifyImage = (e: any, setProfiePicName: any, id = 'profilePic') => {\n  if (e.target.validity.valid) {\n    const fileSize = (document.getElementById(id) as HTMLInputElement)?.files?.item(0)?.size || 0\n    if (fileSize / 1024 > 1024 || fileSize === 0) {\n      return false\n    } else {\n      setProfiePicName(e.target.value.split('\\\\').pop())\n      return true\n    }\n  }\n}\n"],"sourceRoot":""}