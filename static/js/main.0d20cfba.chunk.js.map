{"version":3,"sources":["Components/Spinner/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["Spinner","styleVar","i","className","map","text","style","Auth","React","lazy","HomePage","AdditionalDetails","App","Suspense","fallback","path","exact","component","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEaA,EAAU,WAEnB,IAEMC,EAAW,SAACC,GACd,MAAO,CACH,MAAOA,IAIf,OACI,qBAAKC,UAAU,wBAAf,SACI,mBAAGA,UAAU,SAAb,SAVY,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAWpCC,KAAI,SAACC,EAAcH,GAAf,OACb,sBAAMI,MAAOL,EAASC,GAAtB,SAAmCG,GAAJH,WCV7CK,G,MAAOC,IAAMC,MAAK,kBAAM,wDACxBC,EAAWF,IAAMC,MAAK,kBAAM,uDAC5BE,EAAoBH,IAAMC,MAAK,kBAAM,uDAiB5BG,MAff,WACE,OACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAYC,OAAO,EAAMC,UAAWV,IAChD,cAAC,IAAD,CAAOQ,KAAK,mBAAmBE,UAAWN,IAC1C,cAAC,IAAD,CAAOI,KAAK,eAAeC,OAAO,EAAMC,UAAWP,IACnD,cAAC,IAAD,CAAUQ,KAAK,IAAIC,GAAG,qBCNjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d20cfba.chunk.js","sourcesContent":["import './Spinner.css';\n\nexport const Spinner = () => {\n\n    const loadingText = ['L','O','A','D','I','N','G','.','.','.','!'];\n\n    const styleVar = (i: number) => {\n        return {\n            '--i': i\n        } as React.CSSProperties;\n    }\n\n    return (\n        <div className=\"spinnerWrapper center\">\n            <p className=\"loader\">\n                {loadingText.map((text: string, i: number) => (\n                    <span style={styleVar(i)} key={i}>{text}</span>\n                ))}\n            </p>\n        </div>\n    );\n}","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nimport { Spinner } from './Components/Spinner'\nimport './App.css'\n\nconst Auth = React.lazy(() => import('./Components/Auth'));\nconst HomePage = React.lazy(() => import('./Components/HomePage'));\nconst AdditionalDetails = React.lazy(() => import('./Components/AdditionalDetails'));\n\nfunction App() {\n  return (\n    <React.Suspense fallback={<Spinner />}>\n      <Router>\n        <Switch>\n          <Route path=\"/Chatter/\" exact={true} component={Auth} />\n          <Route path=\"/Chatter/details\" component={AdditionalDetails} />\n          <Route path=\"/Chatter/:id\" exact={true} component={HomePage} />\n          <Redirect from=\"/\" to=\"/Chatter\" />\n        </Switch>\n      </Router>\n    </React.Suspense>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}