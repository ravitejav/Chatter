{"version":3,"sources":["Helpers/TimeStampHelper.tsx","Firebase/FirebaseGroup.tsx","Components/UserChatHeader/index.tsx"],"names":["timeAgo","timestamp","moment","Date","fromNow","FirebaseGroup","firebaseDataBase","firebaseAuth","this","FirebaseApp","database","auth","ref","currentUser","groupDetails","refForGroup","update","id","callBack","on","group","uid","uidExtractor","getCurrentUser","email","child","userIdList","filter","UserChatHeader","activeUser","activeGroup","handleRestGroup","useState","dropDown","setDropDown","className","src","profileUrl","alt","name","active","onClick","olddropDown","icon","faEllipsisV","exitGroup","then","res","FirebaseUser","removeFromGroup","catch","error"],"mappings":"oGAAA,uDAEaA,EAAU,SAACC,GACtB,OAAOA,EAAYC,IAAO,IAAIC,KAAKF,IAAYG,UAAY,O,sHCEhDC,EAAb,WAIE,aAAe,yBAHPC,sBAGM,OAFNC,kBAEM,EACZC,KAAKF,iBAAmBG,IAAYC,WACpCF,KAAKD,aAAeE,IAAYE,OANpC,+CASE,WACE,OAAOH,KAAKF,iBAAiBM,IAAI,YAVrC,4BAaE,WACE,OAAOJ,KAAKD,aAAaM,cAd7B,yBAiBE,SAAmBC,GACjB,OAAON,KAAKO,cAAcC,OAAnB,eACJF,EAAaG,GADT,eAEAH,OApBX,uBAyBE,SAAiBI,GACfV,KAAKO,cAAcI,GAAG,QAASD,KA1BnC,uBA6BE,SAAiBE,GAAa,IAAD,EACrBC,EAAMC,aAAa,UAAAd,KAAKe,wBAAL,eAAuBC,QAAS,IACzD,OAAOhB,KAAKO,cACTU,MAAML,EAAMH,IACZD,OAFI,2BAGAI,GAHA,IAIHM,WAAYN,EAAMM,WAAWC,QAAO,SAACV,GAAD,OAAgBA,IAAOI,YAnCnE,M,sICoDeO,UAhDQ,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,WAAYC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,gBAE/C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OACI,yBAASC,UAAU,oBAAnB,SACI,sBAAKA,UAAU,YAAf,UACKN,GACG,qBAAKO,KAAe,OAAVP,QAAU,IAAVA,OAAA,EAAAA,EAAYQ,aAAc,GAAIC,IAAK,gBAEjD,sBAAKH,UAAU,iBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sBAAMA,UAAU,OAAhB,UAAkC,OAAVN,QAAU,IAAVA,OAAA,EAAAA,EAAYU,QAAZ,OAAoBT,QAApB,IAAoBA,OAApB,EAAoBA,EAAaS,QACzD,uBAAMJ,UAAU,SAAhB,UACI,sBAAMA,UAAU,gBACQ,KAAb,OAAVN,QAAU,IAAVA,OAAA,EAAAA,EAAYW,QAAkB,SAAWxC,aAAkB,OAAV6B,QAAU,IAAVA,OAAA,EAAAA,EAAYW,SAAU,SAGhF,sBAAKL,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAA0BM,QAAS,kBAAMP,GAAY,SAAAQ,GAAW,OAAKA,MAApF,SACI,cAAC,IAAD,CAAiBC,KAAMC,QAE1BX,GACG,qBAAKE,UAAU,WAAf,SACI,sBAAMA,UAAU,gBAAgBM,QAlC1C,YACQ,IAAIpC,KACZwC,UAAUf,GACnBgB,MAAK,SAAAC,IACmB,IAAIC,KACZC,iBAA2B,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAab,KAAM,IAAI6B,MAAK,WACrDf,OACDmB,WAENA,OAAM,SAAAC,QAyBa","file":"static/js/12.fffeda94.chunk.js","sourcesContent":["import moment from 'moment'\n\nexport const timeAgo = (timestamp: number) => {\n  return timestamp ? moment(new Date(timestamp)).fromNow() : null\n}\n","import firebase from 'firebase'\nimport { uidExtractor } from '../Helpers/CallBackHelper'\nimport { GroupDetails } from '../Models/CreateGroup'\nimport FirebaseApp from './FirebaseApp'\n\nexport class FirebaseGroup {\n  private firebaseDataBase: firebase.database.Database\n  private firebaseAuth: firebase.auth.Auth\n\n  constructor() {\n    this.firebaseDataBase = FirebaseApp.database()\n    this.firebaseAuth = FirebaseApp.auth()\n  }\n\n  private refForGroup() {\n    return this.firebaseDataBase.ref('/group')\n  }\n\n  private getCurrentUser() {\n    return this.firebaseAuth.currentUser\n  }\n\n  public createGroup(groupDetails: GroupDetails) {\n    return this.refForGroup().update({\n      [groupDetails.id]: {\n        ...groupDetails,\n      },\n    })\n  }\n\n  public getGroups(callBack: any) {\n    this.refForGroup().on('value', callBack)\n  }\n\n  public exitGroup(group: any) {\n    const uid = uidExtractor(this.getCurrentUser()?.email || '')\n    return this.refForGroup()\n      .child(group.id)\n      .update({\n        ...group,\n        userIdList: group.userIdList.filter((id: string) => id !== uid),\n      })\n  }\n}\n","import { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState } from 'react';\nimport { FirebaseGroup } from '../../Firebase/FirebaseGroup';\nimport { FirebaseUser } from '../../Firebase/FirebaseUserDetails';\nimport { timeAgo } from '../../Helpers/TimeStampHelper';\nimport { MessagingProps } from '../../Models/MessagingModels';\nimport './UserchatHeader.css';\n\nconst UserChatHeader = ({ activeUser, activeGroup, handleRestGroup }: MessagingProps) => {\n\n    const [dropDown, setDropDown] = useState(false);\n\n    const exitGroup = () => {\n        const firebaseGroup = new FirebaseGroup();\n        firebaseGroup.exitGroup(activeGroup)\n            .then(res => {\n                const firebaseUser = new FirebaseUser();\n                firebaseUser.removeFromGroup(activeGroup?.id || '').then(() => {\n                    handleRestGroup();\n                }).catch();\n            })\n            .catch(error => {\n                // handle error\n            })\n    }\n\n    return (\n        <section className=\"userHeader center\">\n            <div className=\"headerBar\">\n                {activeUser && (\n                    <img src={activeUser?.profileUrl || ''} alt={\"profile pic\"} />\n                )}\n                <div className=\"profile center\">\n                    <div className=\"details\">\n                        <span className=\"name\">{activeUser?.name || activeGroup?.name}</span>\n                        <span className=\"status\">\n                            <span className=\"activeUser\"></span>\n                            {activeUser?.active === true ? 'active' : timeAgo(activeUser?.active || 0)}\n                        </span>\n                    </div>\n                    <div className=\"options\">\n                        <div className=\"tripleDot center button\" onClick={() => setDropDown(olddropDown => !olddropDown)}>\n                            <FontAwesomeIcon icon={faEllipsisV} />\n                        </div>\n                        {dropDown && (\n                            <div className=\"dropdown\">\n                                <span className=\"button center\" onClick={exitGroup}>Exit Group</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default UserChatHeader;"],"sourceRoot":""}